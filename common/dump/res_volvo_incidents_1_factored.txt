
F:\Projects\menta-0.3\test>rem java -jar ./stanford-parser-2011-05-18/stanford-parser-2011-05-18.jar  

F:\Projects\menta-0.3\test>java -mx1500m -cp D:\bin/stanford-parser-2011-05-18/stanford-parser.jar edu.stanford.nlp.parser.lexparser.LexicalizedParser -outputFormat "penn,typedDependencies" D:\bin/stanford-parser-2011-05-18/englishFactored.ser.gz volvo_incidents_1.txt 
(ROOT
  (S
    (NP (NN User))
    (VP (VBZ gets)
      (NP (NNP Invalid) (NNP Login))
      (SBAR
        (WHADVP (WRB when))
        (S
          (VP (VBG trying)
            (S
              (VP (TO to)
                (VP (VB logon)
                  (PP (TO to)
                    (NP (NNP Teamcenter))))))))))
    (. .)))

nsubj(gets-2, User-1)
nn(Login-4, Invalid-3)
dobj(gets-2, Login-4)
advmod(trying-6, when-5)
advcl(gets-2, trying-6)
aux(logon-8, to-7)
xcomp(trying-6, logon-8)
prep_to(logon-8, Teamcenter-10)

*OK*

(ROOT
  (S
    (S
      (NP (PRP He))
      (VP
        (VP (VBZ has)
          (VP (VBN got)
            (NP (DT a) (JJ new) (NN password))))
        (CC and)
        (VP (VBN changed)
          (NP (PRP it))
          (PP (IN on)
            (NP (DT the) (JJ new) (JJ CDSID) (NN page))))))
    (CC but)
    (S
      (NP (PRP it))
      (ADVP (RB still))
      (VP (VBZ does) (RB not)
        (VP (VB work))))
    (. .)))

nsubj(got-3, He-1)
nsubj(changed-8, He-1)
aux(got-3, has-2)
det(password-6, a-4)
amod(password-6, new-5)
dobj(got-3, password-6)
conj_and(got-3, changed-8)
dobj(changed-8, it-9)
det(page-14, the-11)
amod(page-14, new-12)
amod(page-14, CDSID-13)
prep_on(changed-8, page-14)
nsubj(work-20, it-16)
advmod(work-20, still-17)
aux(work-20, does-18)
neg(work-20, not-19)
conj_but(got-3, work-20)

*OK*

(ROOT
  (S
    (NP
      (NP (NNS Problems))
      (PP (IN with)
        (NP (CD 3G))))
    (VP (VBZ modems)
      (PP (IN after)
        (NP (NN migration)))
      (: :) (`` ``)
      (S
        (NP (NNP Mobile) (NN connection))
        (ADJP (RB not) (JJ possible))))
    (. .)))

nsubj(modems-4, Problems-1)
prep_with(Problems-1, 3G-3)
prep_after(modems-4, migration-6)
nn(connection-10, Mobile-9)
nsubj(possible-12, connection-10)
neg(possible-12, not-11)
xcomp(modems-4, possible-12)

*Wrong*

(ROOT
  (S
    (NP
      (NP (NNP Ensure))
      (SBAR (IN that)
        (S
          (NP (DT no) (JJ other) (NNS programs))
          (VP (VBP are)
            (VP (VBG using)
              (NP
                (NP (PRP$ your) (VBN selected) (NN device) (, ,)
                  (CC and)
                  (NN trya))
                (PP (RB again) (IN in)
                  (NP (DT a) (JJ short))))
              (SBAR (IN while) (`` ``)
                (S
                  (NP (DT The) (NN user))
                  (VP (VBZ is)
                    (NP
                      (NP (DT a) (NN agent))
                      (VP (VBG working)
                        (PP (IN at)
                          (NP (DT the) (NNP UK) (NN helpdesk)))))))))))))
    (, ,)
    (VP (VB please)
      (VP (VB see)
        (NP
          (NP (DT the) (NN email))
          (VP (VBN attached)
            (PP (TO to)
              (NP
                (NP (DT this) (NN ticket))
                (PP (IN for)
                  (NP (JJR more) (NN info)))))))))
    (. .)))

nsubj(please-31, Ensure-1)
complm(using-7, that-2)
det(programs-5, no-3)
amod(programs-5, other-4)
nsubj(using-7, programs-5)
aux(using-7, are-6)
dep(Ensure-1, using-7)
poss(trya-13, your-8)
amod(trya-13, selected-9)
nn(trya-13, device-10)
cc(trya-13, and-12)
dobj(using-7, trya-13)
advmod(trya-13, again-14)
det(short-17, a-16)
prep_in(trya-13, short-17)
mark(agent-24, while-18)
det(user-21, The-20)
nsubj(agent-24, user-21)
cop(agent-24, is-22)
det(agent-24, a-23)
advcl(using-7, agent-24)
partmod(agent-24, working-25)
det(helpdesk-29, the-27)
nn(helpdesk-29, UK-28)
prep_at(working-25, helpdesk-29)
xcomp(please-31, see-32)
det(email-34, the-33)
dobj(see-32, email-34)
partmod(email-34, attached-35)
det(ticket-38, this-37)
prep_to(attached-35, ticket-38)
amod(info-41, more-40)
prep_for(ticket-38, info-41)

*Please problem*
*Wrong*

(ROOT
  (S
    (NP (NN User))
    (VP (VBZ is)
      (VP (VBG missing)
        (S (`` ``)
          (NP (NNP Outlook) (NNP pst))
          (VP (VB file)
            (NP
              (NP (NN backup) ('' '') (NN icon))
              (PP (IN on)
                (NP (PRP$ her) (NN desktop))))))))
    (. .)))

nsubj(missing-3, User-1)
aux(missing-3, is-2)
nn(pst-6, Outlook-5)
nsubj(file-7, pst-6)
ccomp(missing-3, file-7)
nn(icon-10, backup-8)
dobj(file-7, icon-10)
poss(desktop-13, her-12)
prep_on(icon-10, desktop-13)

*OK*

(ROOT
  (S
    (NP (NN User))
    (VP
      (VP (VBZ has)
        (VP (VBN been)
          (PP (IN on)
            (NP (DT a) (NN trip)))))
      (CC and)
      (VP (VBZ is) (RB now)
        (ADVP (RB back))
        (, ,)
        (S
          (INTJ (VB please))
          (VP (VB install)
            (NP (DT the) (NN application))
            (ADVP (RB now))))))
    (. .)))

nsubj(been-3, User-1)
nsubj(is-8, User-1)
aux(been-3, has-2)
det(trip-6, a-5)
prep_on(been-3, trip-6)
conj_and(been-3, is-8)
advmod(is-8, now-9)
advmod(is-8, back-10)
dep(install-13, please-12)
ccomp(is-8, install-13)
det(application-15, the-14)
dobj(install-13, application-15)
advmod(install-13, now-16)

*OK*

(ROOT
  (S
    (VP (VB See)
      (NP (NN attachment))
      (PP (IN for)
        (NP (NN error) (NN message))))
    (. .)))

dobj(See-1, attachment-2)
nn(message-5, error-4)
prep_for(See-1, message-5)

*OK*

(ROOT
  (NP
    (NP (NN LAB95))
    (: -)
    (NP
      (NP (NNP Provning) (NN rekveo))
      (VP (VBG planering)
        (S
          (INTJ (UH Please))
          (VP
            (VP (VB assist)
              (NP (NN user)))
            (, ,)
            (CC and)
            (VP (VB investigate))))))
    (. !)))

nn(rekveo-4, Provning-3)
dep(LAB95-1, rekveo-4)
partmod(rekveo-4, planering-5)
dep(assist-7, Please-6)
ccomp(planering-5, assist-7)
dobj(assist-7, user-8)
ccomp(planering-5, investigate-11)
conj_and(assist-7, investigate-11)

*Syntax error*
*Wrong*

(ROOT
  (S
    (NP (NN User))
    (VP (VBD had)
      (VP (VBN received)
        (NP (JJ wrong) (NN application))))
    (. .)))

nsubj(received-3, User-1)
aux(received-3, had-2)
amod(application-5, wrong-4)
dobj(received-3, application-5)

*OK*

(ROOT
  (S
    (S
      (NP (NN User))
      (VP (VBZ has)
        (VP (VBN ordered)
          (NP
            (NP
              (NP (NNP Wordfinder) (NNP Business) (NNP Economical))
              (PP (IN for)
                (NP (PRP$ her) (NN service) (NN tag))))
            (NP (CD 7Q4TC3J))))))
    (, ,)
    (NP (EX there))
    (VP (VBZ is)
      (VP (VBN completed)
        (NP (NN order))
        (PP (IN in)
          (NP (NNP LOT)))
        (PP (IN with)
          (NP (NN number) (NN ITCOORD-18125)))))
    (. .)))

nsubj(ordered-3, User-1)
aux(ordered-3, has-2)
ccomp(completed-15, ordered-3) *wrong*
nn(Economical-6, Wordfinder-4)
nn(Economical-6, Business-5)
dobj(ordered-3, Economical-6)
iobj(ordered-3, Economical-6)
poss(tag-10, her-8)
nn(tag-10, service-9)
prep_for(Economical-6, tag-10)
dobj(ordered-3, 7Q4TC3J-11)
dep(Economical-6, 7Q4TC3J-11)
expl(completed-15, there-13)
auxpass(completed-15, is-14)
dobj(completed-15, order-16)
nsubjpass(completed-15, order-16)
prep_in(completed-15, LOT-18)
nn(ITCOORD-18125-21, number-20)
prep_with(completed-15, ITCOORD-18125-21)

*Wrong*

(ROOT
  (S
    (S
      (ADVP (RB However))
      (NP (PRP she))
      (VP (VBD received)
        (NP (JJ wrong) (NN version))))
    (, ,)
    (NP (PRP she))
    (VP (VBD received)
      (NP
        (NP (NNP Wordfinder) (NNP Tehcnical))
        (PP (RB instead) (IN of)
          (NP (NNP Business) (NNP Economical)))))
    (. .)))

advmod(received-3, However-1)
nsubj(received-3, she-2)
ccomp(received-8, received-3)
amod(version-5, wrong-4)
dobj(received-3, version-5)
nsubj(received-8, she-7)
nn(Tehcnical-10, Wordfinder-9)
dobj(received-8, Tehcnical-10)
nn(Economical-14, Business-13)
prep_instead_of(Tehcnical-10, Economical-14)

*OK*

(ROOT
  (S
    (INTJ (UH Please))
    (VP (VB assist))
    (. .)))

dep(assist-2, Please-1)

*OK*

(ROOT
  (S
    (S
      (NP
        (NP (NN Laptop))
        (: -)
        (NP (NN user)))
      (VP (VBZ has)
        (NP
          (ADJP (RB almost) (JJ full))
          (NN C))))
    (: :)
    (CC but)
    (S
      (SBAR
        (WHADVP (WRB when))
        (S
          (NP (PRP he))
          (VP (VBZ looks)
            (PP (IN in)
              (NP
                (NP (DT the) (NNS properties))
                (PP (IN of)
                  (NP (DT the) (NNS files)
                    (CC and)
                    (NNS folders)))))
            (PP (IN on)
              (NP (NNP C)))
            (: :))))
      (S
        (NP (PRP they))
        (VP (VBP are)
          (NP
            (QP (RB only) (CD 40GB)))))
      (CC and)
      (S
        (NP (PRP he))
        (VP (VBZ has)
          (NP (DT a) (CD 55GB) (NN drive)))))
    (. .)))

nsubj(has-4, Laptop-1)
dep(Laptop-1, user-3)
advmod(full-6, almost-5)
amod(C-7, full-6)
dobj(has-4, C-7)
advmod(looks-12, when-10)
nsubj(looks-12, he-11)
advcl(40GB-27, looks-12)
det(properties-15, the-14)
prep_in(looks-12, properties-15)
det(files-18, the-17)
prep_of(properties-15, files-18)
prep_of(properties-15, folders-20)
conj_and(files-18, folders-20)
prep_on(looks-12, C-22)
nsubj(40GB-27, they-24)
cop(40GB-27, are-25)
quantmod(40GB-27, only-26)
conj_but(has-4, 40GB-27)
nsubj(has-30, he-29)
conj_but(has-4, has-30)
conj_and(40GB-27, has-30)
det(drive-33, a-31)
num(drive-33, 55GB-32)
dobj(has-30, drive-33)

*OK*

(ROOT
  (S
    (NP (NN User))
    (VP (MD can) (RB not)
      (VP (VB find)
        (S
          (NP (NNP Produkt) (NNP Manageron))
          (VP (VB start)
            (NP (JJ menyplease) (NN reinstall))))))
    (. .)))

nsubj(find-4, User-1)
aux(find-4, can-2)
neg(find-4, not-3)
nn(Manageron-6, Produkt-5)
nsubj(start-7, Manageron-6)
ccomp(find-4, start-7)
amod(reinstall-9, menyplease-8)
dobj(start-7, reinstall-9)

*Syntax error*
*Wrong*

(ROOT
  (S
    (NP (NN User))
    (VP (VBZ needs)
      (S
        (VP (TO to)
          (VP (VB have)
            (NP (NN pdf) (CD 995) (NN re-installed))
            (S
              (VP (VB please)))))))
    (. .)))

nsubj(needs-2, User-1)
xsubj(have-4, User-1)
aux(have-4, to-3)
xcomp(needs-2, have-4)
nn(re-installed-7, pdf-5)
num(re-installed-7, 995-6)
dobj(have-4, re-installed-7)
dep(have-4, please-8)

*OK*

(ROOT
  (S
    (VP (VBD Failed)
      (NP (NNP LOT)))
    (. .)))

dobj(Failed-1, LOT-2)

*OK*
